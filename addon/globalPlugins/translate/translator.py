# Note: the following code was generated by github copilot as a starting point.
from urllib.parse import urlparse

class Translator:
	def __init__(self):
		self._api_key = None
		self._server_url = None
		self._supported_languages = None

	@property
	def api_key(self):
		return self._api_key

	@api_key.setter
	def api_key(self, value):
		self._api_key = value

	@property
	def server_url(self):
		return self._server_url

	@server_url.setter
	def server_url(self, value):
		parsed_url = urlparse(value)
		if all([parsed_url.scheme, parsed_url.netloc]):
			self._server_url = value
		else:
			raise ValueError("Invalid URL")

	@property
	def supported_languages(self):
		return self._supported_languages

	@supported_languages.setter
	def supported_languages(self, value):
		if isinstance(value, dict):
			self._supported_languages = value
		else:
			raise ValueError("Supported languages must be a dictionary")

	def translate(self, text, from_lang, to_lang):
		raise NotImplementedError("This method should be overridden by inheriting classes")

